{"name":"module-json","displayName":"module-json","components":[{"hidden":false,"displayName":"JSON to Object","description":"Converts a JSON string into a Java Object. A JSON object is mapped to a Java Map and a JSON array is mapped to a Java List. A null payload produces a null output payload and an exception is thrown if the input is not a String or a not valid JSON.","fullyQualifiedName":"com.reedelk.json.component.JSONToObject","type":"PROCESSOR","properties":[]},{"hidden":false,"displayName":"Object to JSON","description":"Converts a Java Object into a JSON string. A Java List is mapped to a JSON Array and a Java Map is mapped to a Java Map. Any other Java object is mapped using getters. If pretty print is set to true, the output JSON is pretty printed using the given indent factor which adds a number of spaces to each level of indentation.","fullyQualifiedName":"com.reedelk.json.component.ObjectToJSON","type":"PROCESSOR","properties":[{"name":"prettyPrint","example":"true","initValue":"###USE_DEFAULT_VALUE###","description":"If true the output JSON is pretty printed using the given indent factor.","displayName":"Pretty print","defaultValue":"false","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[]},{"name":"indentFactor","example":"2","initValue":"###USE_DEFAULT_VALUE###","hintValue":"4","description":"The number of spaces to add to each level of indentation. If indent factor is 0 JSON object has only one key,  then the object will be output on a single line: \u003ccode\u003e{ {\"key\": 1}}\u003c/code\u003e","displayName":"Indent","defaultValue":"2","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[{"propertyName":"prettyPrint","propertyValue":"true"}]}]}],"types":[{"global":true,"type":"com.reedelk.json.internal.Json","description":"The Json type provides a set of utility functions to convert from/to JSON.","functions":[{"name":"stringify","example":"Json.stringify(message.payload())","signature":"stringify(object: Object)","returnType":"java.lang.String","description":"Converts the input into a JSON string.","cursorOffset":1},{"name":"stringify","example":"Json.stringify(message.payload(), 2)","signature":"stringify(object: Object, indentFactor: int)","returnType":"java.lang.String","description":"Converts the input into a pretty printed JSON string using the provided indent factor.","cursorOffset":1},{"name":"parse","example":"Json.parse(\"{\u0027name\u0027: \u0027John\u0027, \u0027surname\u0027: \u0027Doe\u0027}\")","signature":"parse(json: String)","returnType":"java.lang.Object","description":"Parses the input string into a Java object. The output object is a list or a map according to the input JSON.","cursorOffset":1}],"properties":[]}]}